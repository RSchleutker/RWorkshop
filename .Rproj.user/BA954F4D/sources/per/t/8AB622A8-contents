## Abgabe von Svenja Jedhoff und Raphael Schleutker
## Blatt 8

library(datasets)

setwd("C:/Users/Raphael/Dropbox/Statistik/deskrip_stat/proginr_1/blatt_8/")

## Aufgabe 20 -----

# Zunaechst die entsprechenden Daten laden.
load(url(paste("http://luschnig.uni-muenster.de",
               "sites/default/files",
               "anmeldezeiten.RData", sep = "/")))

# Man oeffnet jeweils das entsprechende Device, fuehrt die Grafik-Funktionen aus
# und schliesst das Device wieder. Fuer jedes Device muessen separat die Margins
# gesetzt werden.

# a)

pdf("boxplot.pdf")

par(mar = c(5,12,4,2) + .1)

boxplot(as.numeric(Zeitspanne) ~ Studiengang, data = anmeldezeiten,
        horizontal = TRUE, las = 1,
        xlab = "Zeit nach Anmeldestart (min)", main = "Anmeldezeit")

dev.off()


# b)

png("boxplot.png")

par(mar = c(5,12,4,2) + .1)

boxplot(as.numeric(Zeitspanne) ~ Studiengang, data = anmeldezeiten,
        horizontal = TRUE, las = 1,
        xlab = "Zeit nach Anmeldestart (min)", main = "Anmeldezeit")

dev.off()


# c)

svg("boxplot.svg")

par(mar = c(5,12,4,2) + .1)

boxplot(as.numeric(Zeitspanne) ~ Studiengang, data = anmeldezeiten,
        horizontal = TRUE, las = 1,
        xlab = "Zeit nach Anmeldestart (min)", main = "Anmeldezeit")

dev.off()


# d)

win.metafile("boxplot.wmf")

par(mar = c(5,12,4,2) + .1)

boxplot(as.numeric(Zeitspanne) ~ Studiengang, data = anmeldezeiten,
        horizontal = TRUE, las = 1,
        xlab = "Zeit nach Anmeldestart (min)", main = "Anmeldezeit")

dev.off()


## Aufgabe 21 -----

# Datensatz laden.
load("PKW.RData")

# a)

str(PKW)
# 'data.frame':	398 obs. of  9 variables:
# $ mpg         : num  18 15 18 16 17 15 14 14 14 15 ...
# $ cylinders   : int  8 8 8 8 8 8 8 8 8 8 ...
# $ displacement: num  307 350 318 304 302 429 454 440 455 390 ...
# $ horsepower  : int  130 165 150 150 140 198 220 215 225 190 ...
# $ weight      : int  3504 3693 3436 3433 3449 4341 4354 4312 4425 3850 ...
# $ acceleration: num  12 11.5 11 12 10.5 10 9 8.5 10 8.5 ...
# $ model.year  : int  70 70 70 70 70 70 70 70 70 70 ...
# $ origin      : int  1 1 1 1 1 1 1 1 1 1 ...
# $ car.name    : Factor w/ 305 levels "amc ambassador brougham",..: 50 37 232 15 162 142 55 224 242 2 ...

# Um Platz zu sparen, werden mehrere Plots auf eine Seite geplotted. Ausserdem
# werden die Margins angepasst.
par(mfrow = c(3,3), las = 1, mar = c(4,4,3,1) + .1)

# Nun kann man die Spalten des Datensatzes z.B. als Histogramme plotten.
mapply(hist,
       PKW[,1:(ncol(PKW)-1)],
       main = names(PKW[,1:(ncol(PKW)-1)]),
       xlab = names(PKW[,1:(ncol(PKW)-1)]),
       freq = FALSE)

dev.off()

# Eine andere Moeglichkeit waeren Boxplots.
par(mfrow = c(3,3), las = 1, mar = c(4,1,3,1) + .1)

mapply(boxplot,
       PKW[,1:(ncol(PKW)-1)],
       main = names(PKW[,1:(ncol(PKW)-1)]),
       xlab = names(PKW[,1:(ncol(PKW)-1)]),
       horizontal = TRUE)

dev.off()

# b)

# Da zum Erzeugen mehrerer Grafiken mapply benutzt wurde, kann man z.B. Titel
# und Achsenbeschriftungen in eigenen Vektoren speichern und diese als Argumente
# an mapply() uebergeben.
main <- c("Kraftstoffverbrauch",
          "Zylinder",
          "Hubraum",
          "Pferdestaerken",
          "Gewicht",
          "Beschleunigung",
          "Jahrgang",
          "Origin")

scales <- c("(mpg)",
            "",
            "",
            "",
            "",
            "",
            "",
            "")

par(mfrow = c(3,3), las = 1, mar = c(4,4,3,1) + .1)

# Nun werden die Grafiken erstellt.
mapply(hist,
       PKW[,1:(ncol(PKW)-1)],
       main = main,
       xlab = paste(main, scales),
       ylab = "Norm. Rel. Häufigkeit",
       freq = FALSE)

dev.off()

par(mfrow = c(3,3), las = 1, mar = c(4,1,3,1) + .1)

mapply(boxplot,
       PKW[,1:(ncol(PKW)-1)],
       main = main,
       xlab = paste(main, scales),
       horizontal = TRUE)

dev.off()


# c)

# Man oeffnet das PDF-Device und erstellt dann jeweils eine neue Grafik, die
# automatisch als neue Seiten in das PDF eingefuegt werden.
pdf("pkw.pdf", width = 5, height = 4)

par(mar = c(4,5,3,1) + .1, las = 1)

mapply(hist,
       PKW[,1:(ncol(PKW)-1)],
       main = main,
       xlab = paste(main, scales),
       freq = FALSE)

par(mar = c(4,1,3,1) + .1, las = 1)

mapply(boxplot,
       PKW[,1:(ncol(PKW)-1)],
       main = main,
       xlab = paste(main, scales),
       horizontal = TRUE)

dev.off()

## Aufgabe 22 -----

# a)




# b)

# Uns erschien die Moeglichkeit, die auf dem Uebungszettel zur Erzeugung der
# Spalte angegeben war, etwas zu umstaendlich. Deshalb hier eine andere
# Variante.
airquality2 <-
  within(airquality,
         {
           Datum <- as.Date(paste("1973", Month, Day, sep = "-"))
         })


# c)

# Das Streudiagramm wurde mithilfe des Formel-Interfaces erzeugt. Es scheint,
# als nehme die Windgescheindigkeit mit steigender Temperatur ab.
plot(Wind ~ Temp, data = airquality2,
     main = "Streudiagramm", xlab = "Temperatur (°F)", ylab = "Wind (mph)")


# d)

# Man bekommt den Eindruck, als sei es in den Sommermonaten waermer als in den
# Wintermonaten, was Sinn macht, da die Daten in New York erhoben wurde und New
# York auf der noerdlichen Erdhemisphaere liegt.
plot(Temp ~ Datum, data = airquality2,
     main = "Streudiagramm",
     xlab = "Datum im Jahr 1973", ylab = "Temperatur (°F)")
